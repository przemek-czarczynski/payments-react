{"version":3,"sources":["images/paymentsListLayout.jpg","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/functions/currentDate.js","components/functions/left.js","images/trash.svg","components/Payments/paymentItem.js","components/Payments/paymentList.js","components/Payments/addNew.js","components/Payments/editPayment.js","components/Payments/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APIID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","className","type","onClick","handleClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","isToggled","handleClass","nav_toggle_Styles","nav_Styles","to","SignOut","NavigationNonAuth","Navigation","Landing","src","paymentImage","alt","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","onChange","target","name","isInvalid","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","placeholder","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","htmlFor","SignInForm","SignInPage","currentDate","pdate","Date","year","getFullYear","month","getMonth","day","getDate","left","date","longCdate","toFixed","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","focusable","role","viewBox","ForwardRef","forwardRef","PaymentItem","useState","isHoover","setHoover","item","id","amount","paid","confirmPaid","handleEdit","handleDelete","handleIdEdit","didpaid","styles","backgroundColor","color","toggleHover","style","onMouseEnter","onMouseLeave","parseFloat","PaymentList","notPaid","startDate","toISOString","substr","endDate","overdueList","isClickedOverdue","getDates","days","getTime","handleChangeDate","e","setOverduePayments","sortlist","payments","filter","todayDate","sort","a","b","handleNotPaid","console","log","list","map","description","tabheader","overdueShow","tb","displayh1","addNew","details","dayalert","redirect","cancel","errorMsg","renderRedirect","handleChange","handleSubmit","handleCancel","clearPath","changeFlag","step","min","EditPayment","handlePaid","currentTarget","refState","handleSubmitEdit","isPaid","ispaid","docRef","firestore","collection","doc","get","exists","data","PaymentsAuth","isFetching","isFetched","isEditing","IdEdit","isAddingNew","redirectPath","payment","update","tempPayments","index","add","newPayments","delete","path","showMessage","showList","querySnapshot","forEach","stylesAddBtn","display","PaymentsNonAuth","SignIn","Payments","PasswordChangeForm","PasswordChange","AdminPage","loading","off","on","snapshot","usersObject","val","usersList","UserList","basename","exact","component","LandingPage","HomePage","PaymentsPage","EditPaymentPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c59e4a6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paymentsListLayout.2792f58f.jpg\";","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","  // Your web app's Firebase configuration\r\nimport app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n  const config = {\r\n      apiKey: process.env.REACT_APP_API_KEY,\r\n      authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n      databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n      projectId: process.env.REACT_APP_PROJECT_ID,\r\n      storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n      messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n      appId: process.env.REACT_APP_APIID\r\n  };\r\n\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n     this.auth = app.auth();\r\n     this.db = app.database();\r\n  }\r\n   // *** Auth API ***\r\n   doCreateUserWithEmailAndPassword = (email, password) =>\r\n     this.auth.createUserWithEmailAndPassword(email, password);\r\n   \r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n \r\n  user = uid => this.db.ref(`users/${uid}`);\r\n  users = () => this.db.ref('users');\r\n}\r\nexport default Firebase;","import FirebaseContext, {\r\n  withFirebase\r\n} from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport {\r\n  FirebaseContext,\r\n  withFirebase\r\n};","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nconst handleClick =( firebase )=>{\r\n  firebase.doSignOut();\r\n\r\n}\r\nconst SignOutButton = ({firebase}) => (\r\n  <button className='x' type=\"button\" onClick={()=>handleClick(firebase)}>\r\n    Logout\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\nconst AuthUserContext = React.createContext(null);\r\nexport default AuthUserContext;","import React from 'react';\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n   render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport AuthUserContext from './context';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\nexport default withAuthorization;","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const PAYMENTS = '/payments';\r\nexport const PAYMENTSLIST = '/payments/list';\r\nexport const EDITPAYMENT = '/payments/edit';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport SignOutButton from '../SignOut';\r\nimport { AuthUserContext } from '../Session';\r\nimport '../../css/sidebar.css';\r\n\r\nconst Navigation = () => (\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>         \r\n        (authUser) ? \r\n          <NavigationAuth authUser={authUser}/> : \r\n          <NavigationNonAuth />    \r\n      }\r\n    </AuthUserContext.Consumer>\r\n);\r\nclass NavigationAuth extends Component { \r\n\r\n  state= {\r\n    isToggled : false,\r\n    className : ''\r\n  }\r\n\r\n  handleClass = ()=>{\r\n    if(this.state.isToggled) {\r\n      this.setState({\r\n        isToggled : !this.state.isToggled,\r\n        className: ''\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isToggled: !this.state.isToggled,\r\n        className: 'expanded'\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n\r\n    let nav_toggle_Styles = `nav-toggle ${this.state.className}`;\r\n    let nav_Styles = `nav ${this.state.className}`\r\n    \r\n    return(\r\n      <>\r\n        <div className={nav_toggle_Styles} onClick={this.handleClass}>\r\n          <div className=\"nav-toggle-bar\"></div>\r\n        </div>\r\n\r\n        <nav className={nav_Styles} onClick={this.handleClass}>\r\n          <ul>\r\n            <li>\r\n              <Link to={ROUTES.LANDING}>Landing</Link>\r\n            </li>\r\n            {/* <li>\r\n              <Link to={ROUTES.HOME}>Home</Link>\r\n            </li> */}\r\n            <li>\r\n              <Link to={ROUTES.PAYMENTS}>Payments</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n            </li>\r\n            <li>\r\n              <SignOutButton />\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </>\r\n    ) \r\n  }\r\n};\r\n\r\nclass NavigationNonAuth extends Component {\r\n\r\n  state = {\r\n    isToggled: false,\r\n    className: ''\r\n  }\r\n\r\n  handleClass = () => {\r\n    if (this.state.isToggled) {\r\n      this.setState({\r\n        isToggled: !this.state.isToggled,\r\n        className: ''\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isToggled: !this.state.isToggled,\r\n        className: 'expanded'\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    let nav_toggle_Styles = `nav-toggle ${this.state.className}`;\r\n    let nav_Styles = `nav ${this.state.className}`\r\n\r\n    return (\r\n      <>\r\n      <div className={nav_toggle_Styles} onClick={this.handleClass}>\r\n        <div className=\"nav-toggle-bar\"></div>\r\n      </div>\r\n      <nav className={nav_Styles} onClick={this.handleClass}>\r\n        <ul>\r\n          <li>\r\n            <Link to={ROUTES.LANDING}>Landing</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={ROUTES.SIGN_IN}>Login</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\nimport paymentImage from '../../images/paymentsListLayout.jpg'\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nfunction Landing() {\r\n\r\n  return (\r\n      <div className=\"wrapper columns\">\r\n\r\n        <div className=\"topInfo\">\r\n          <h1 className=\"topInfo-h1\">Manage your bills</h1>\r\n        </div> \r\n\r\n        <div className=\"holder columns\">\r\n          <p>We’ve all got a ton of bills to juggle and pay every month. So if you struggle to pay your bills on time or you are forgetting your monthly payments, don’t worry we have a solution for you.</p>\r\n          <p>This application help you keep track of them and can serve as a checklist each month to be sure you don’t miss any payments.</p>\r\n\r\n          <div className='holder-2col'>   \r\n            <img \r\n              className='layout-img' \r\n              src={paymentImage} \r\n              alt=\"layout of the main paymnets page with the bills list\"/>\r\n            \r\n            <div className='auth-side'>\r\n              <p className=\"layout-signup\">\r\n                Don't have an account? \r\n                <Link className=\"btn-save\" to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n              </p>\r\n\r\n              <AuthUserContext.Consumer>\r\n                {authUser => (!authUser) &&  \r\n                <p className=\"layout-signup\">\r\n                  I have an account. \r\n                  <Link className=\"btn-save\" to={ROUTES.SIGN_IN}>Login</Link>\r\n                </p> }\r\n              </AuthUserContext.Consumer>\r\n            </div>        \r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Landing","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport {\r\n  withFirebase\r\n} from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport '../../css/signup.css'\r\n\r\n\r\nconst SignUpPage = () => (\r\n  <div className=\"wrapper columns\">\r\n    <div className=\"topInfo\">\r\n      <h1 className=\"topInfo-h1\">Sign Up Form</h1>\r\n    </div>  \r\n     <SignUpForm/>\r\n    \r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n\r\n\r\n// class SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE\r\n    };\r\n  }\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          });\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form className=\"signin\" onSubmit={this.onSubmit}>\r\n        <label>full name</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n        />\r\n        <label>email address</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n        />\r\n        <label>password</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n        />\r\n        <label>Confirm Password</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignUpLink = () => (\r\n  <p className=\"SignUpLnk\">\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase)(SignUpFormBase);\r\n\r\n// const SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport '../../css/passwordforgot.css';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div className=\"wrapper columns\">\r\n    <div className=\"topInfo\">\r\n      <h1 className=\"topInfo-h1\">Password Forget</h1>\r\n    </div>  \r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === '';\r\n  \r\n    return (\r\n      <form className=\"signin\" onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () => (\r\n  <p className=\"PswForgotLnk\">\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport '../../css/signin.css';\r\n\r\nconst SignInPage = () => (\r\n  <div className=\"wrapper columns\">\r\n    <div className=\"topInfo\">\r\n      <h1 className=\"topInfo-h1\">Login</h1>\r\n    </div>  \r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.PAYMENTS);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === '' || email === '';\r\n    return (\r\n      <form className=\"signin\" onSubmit={this.onSubmit}>\r\n        \r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          // placeholder=\"Email Address\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          // placeholder=\"Password\"\r\n        />\r\n        {error? <p className=\"errorMsg\">{error.message}</p> : <p className=\"errorMsg\"></p>}\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Login\r\n        </button>\r\n        \r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };","import React from 'react';\r\nimport { withAuthorization } from '../Session';\r\nconst HomePage = () => (\r\n  <div className=\"wrapper columns\">\r\n\r\n    <div className=\"topInfo\">\r\n      <h1 className=\"topInfo-h1\">Home Page</h1>\r\n    </div>\r\n  \r\n    <div className=\"holder columns\">\r\n      <p>The Home Page is accessible by every signed in user.</p>\r\n      <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Enim sapiente placeat quisquam modi maxime unde aspernatur natus mollitia quos laborum dignissimos animi minima molestias, totam cum nemo, accusamus, recusandae velit.</p>\r\n    </div>\r\n   \r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);","const currentDate = () => {\r\n    const pdate = new Date();\r\n    const year = pdate.getFullYear();\r\n    const month = ((pdate.getMonth() + 1) > 9) ? (pdate.getMonth() + 1) : `0${(pdate.getMonth()+1)}`;\r\n    const day = pdate.getDate();\r\n\r\n    const date = `${year}-${month}-${day}`;\r\n    return date\r\n  };\r\n\r\nexport default currentDate","\r\nimport currentDate from '../functions/currentDate'\r\n\r\nconst left = (date) => {\r\n  const longCdate = new Date(currentDate(new Date()))\r\n  const longPdate = new Date(date)\r\n  return ((longPdate - longCdate) / (24 * 60 * 60 * 1000)).toFixed();\r\n\r\n}\r\n\r\nexport default left","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"\n});\n\nvar SvgTrash = function SvgTrash(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"trash-alt\",\n    className: \"svg-inline--fa fa-trash-alt fa-w-14\",\n    role: \"img\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTrash, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/trash.740028d4.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport '../../css/paymentItem.css'\r\nimport left from '../functions/left'\r\nimport { ReactComponent as Trash } from '../../images/trash.svg';\r\n\r\nfunction PaymentItem(props) {\r\n\r\n  const [isHoover, setHoover] = React.useState(false)\r\n\r\n  const {id, title, amount, date, paid } = props.item;\r\n  const confirmPaid = props.confirmPaid;\r\n  const handleEdit = props.handleEdit;\r\n  const handleDelete = props.handleDelete;\r\n\r\n  const handlePaid = ()=>{\r\n    confirmPaid(id)\r\n  }\r\n\r\n  const handleIdEdit = () => {\r\n    handleEdit(id)\r\n  }\r\n  const handleIdDelete = () => {\r\n    handleDelete(id)\r\n  }\r\n  const didpaid= paid ? \r\n    <p className='btn-confirmed center'>Paid</p>\r\n    :<p className='btn-not-confirmed center' onClick={handlePaid}>Mark as Paid</p>\r\n  \r\n  let styles = {}\r\n  \r\n  if (isHoover) {\r\n    styles = {\r\n      backgroundColor: 'rgb(255, 255, 200)'\r\n    }\r\n  } else {\r\n    if (left(date) < 0 && !paid) {\r\n      styles = {\r\n        backgroundColor: 'rgb(200, 21, 21)',\r\n        color: 'white'\r\n      }\r\n    }\r\n\r\n    if (left(date) === '0') {\r\n      styles = {\r\n        backgroundColor: 'rgb(240, 191, 30)',\r\n        color: 'white'\r\n      }\r\n    }\r\n\r\n    if (paid) {\r\n      styles = {\r\n        backgroundColor: 'rgb(181, 254, 97)'\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  const toggleHover = () => {\r\n    setHoover(!isHoover)\r\n  }\r\n  \r\n  const infoDays = ()=>{\r\n    if ((left(date) < 0) && (!paid)) {\r\n      return (\r\n        <p className='itemRow-details center' onClick={handleIdEdit} >overdue</p>\r\n      )\r\n    } else if (paid) {\r\n      return (\r\n        <p className='itemRow-details center' onClick={handleIdEdit} >-</p>\r\n      )\r\n    } else {\r\n      return (\r\n        <p className='itemRow-details center' onClick={handleIdEdit} >{left(date)}</p>\r\n      )\r\n    }\r\n  }\r\n\r\n \r\n  return (\r\n\r\n    <div className='itemRow' style={styles} onMouseEnter={toggleHover} onMouseLeave={toggleHover} >\r\n      \r\n      <p className='itemRow-details ' onClick={handleIdEdit}>{title}</p>\r\n      <p className='itemRow-details align-right' onClick={handleIdEdit} >{parseFloat(amount).toFixed(2)}</p>\r\n      <p className='itemRow-details center' onClick={handleIdEdit} >{date}</p>\r\n      \r\n      {infoDays()}\r\n      \r\n      {didpaid}\r\n      \r\n      <div className=\"svgWrapper\" onClick={handleIdDelete}>\r\n        <Trash className=\"trash\"/>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default PaymentItem;","import React, {Component} from 'react';\r\nimport PaymentItem from './paymentItem';\r\nimport '../../css/paymentList.css';\r\nimport '../../css/paymentItem.css';\r\nimport left from '../functions/left';\r\n\r\nclass PaymentList extends Component {\r\n  state={\r\n    notPaid : true,\r\n    startDate: new Date().toISOString().substr(0, 10),\r\n    endDate: '',\r\n    overdueList:[],\r\n    isClickedOverdue : false\r\n  }\r\n  \r\n  getDates = (days = 7 )=> {\r\n    let pdate =  new Date();\r\n    let year = pdate.getFullYear() ;\r\n    let month = ( (pdate.getMonth()+1) > 9) ? (pdate.getMonth()+1) : `0${(pdate.getMonth()+1)}`;\r\n    let day = (pdate.getDate() > 9) ? pdate.getDate(): `0${pdate.getDate()}`;\r\n    \r\n    const startDate = `${year}-${month}-${day}`;\r\n    \r\n    let endDate = pdate.getTime() + ((24 * 60 * 60 * 1000) * days)\r\n   \r\n    pdate = new Date(endDate)\r\n    year = pdate.getFullYear();\r\n    month = ((pdate.getMonth() + 1) > 9) ? (pdate.getMonth() + 1) : `0${(pdate.getMonth()+1)}`;\r\n    day = (pdate.getDate() > 9) ? pdate.getDate() : `0${pdate.getDate()}`;\r\n\r\n    endDate = `${year}-${month}-${day}`;\r\n\r\n    this.setState({\r\n      startDate,\r\n      endDate\r\n    });\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.getDates()  \r\n  }\r\n\r\n  handleChangeDate = (e)=>{\r\n    this.setState( {\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  setOverduePayments = (overdueList) => {\r\n    this.setState({overdueList,\r\n    isClickedOverdue: !this.state.isClickedOverdue\r\n  })\r\n  }\r\n\r\n  render() {\r\n   \r\n    let sortlist=[]\r\n\r\n    const props = this.props\r\n    const confirmPaid = props.confirmPaid;\r\n    const handleEdit = props.handleEdit;\r\n    const handleDelete=props.handleDelete;\r\n    \r\n    const compareLeftdays = (a,b)=> {\r\n      return left(a.date) - left(b.date)\r\n    }\r\n    \r\n    let overdueList = props.payments.filter(item => {\r\n      const todayDate = new Date().toISOString().substr(0, 10)\r\n      return item.paid === false && item.date < todayDate\r\n    })\r\n\r\n  \r\n    const overdueShow =()=>{\r\n   \r\n      let className = 'btn-overdue'\r\n   \r\n      if (this.state.isClickedOverdue) {className = 'btn-overdue-clicked'}\r\n   \r\n      return (\r\n        overdueList.length>0 ?  \r\n        <div className={className} onClick={()=>this.setOverduePayments(overdueList)}>\r\n          <p className='p-overdue' >\r\n          {this.state.isClickedOverdue?'Click here to back to the previous list':`You have ${overdueList.length} total overdue payments - click here to show`}</p>\r\n        </div> \r\n        : ''\r\n      )\r\n    }\r\n\r\n    sortlist = props.payments.sort(compareLeftdays);\r\n\r\n    if (this.state.notPaid) {\r\n      let notpaidlist = [...sortlist]\r\n      sortlist = notpaidlist.filter(item => {\r\n        return item.paid === false && item.date >= this.state.startDate && item.date <= this.state.endDate\r\n      })\r\n    } else {\r\n      sortlist = sortlist.filter(item => {\r\n        return item.date >= this.state.startDate && item.date <= this.state.endDate\r\n      })\r\n    }\r\n    \r\n\r\n    const handleNotPaid = () => {\r\n        this.setState({\r\n          notPaid: !this.state.notPaid,\r\n          isClickedOverdue : false\r\n        })\r\n        // sortlist = sortlist.filter( item => {\r\n        //   if (item.paid === false) { return item }\r\n        // })\r\n\r\n    }\r\n\r\n    if (this.state.isClickedOverdue) {\r\n      console.log(this.state.overdueList)\r\n      sortlist=[...this.state.overdueList]\r\n    }\r\n    let list = sortlist.map(item => (\r\n    \r\n      <tr key={item.id}>\r\n        <PaymentItem \r\n          item={item}\r\n          confirmPaid={confirmPaid} \r\n          handleEdit={handleEdit} \r\n          handleDelete={handleDelete}\r\n          />\r\n      </tr>  \r\n    ));\r\n\r\n    const displayh1 = () => {\r\n        const tb = tabheader();\r\n        return (props.payments.length > 0 ? tb : <h1> Empty List </h1>)\r\n    }\r\n    \r\n\r\n    const dateRange = () => {\r\n    \r\n      return (\r\n        <div className=\"dateRange\">\r\n          <label>From:\r\n            <input type=\"date\" id='startDate' \r\n              onChange={this.handleChangeDate} \r\n              value={this.state.startDate} />\r\n          </label>\r\n\r\n          <label>To:\r\n            <input type=\"date\" id='endDate' \r\n              onChange={this.handleChangeDate} \r\n              value={this.state.endDate} />\r\n          </label>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const description = ()=>{\r\n      \r\n      if (!this.state.isClickedOverdue) {\r\n        return (       \r\n          <>\r\n            {dateRange()}\r\n          </>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  \r\n\r\n    const tabheader= ()=>{\r\n      return (\r\n          <>\r\n            {overdueShow()}\r\n            <div className='filterRow'>\r\n            \r\n              <div className=\"filterRange\">\r\n                \r\n                {description()}\r\n                \r\n              </div>    \r\n              <p className='btn-save' onClick={handleNotPaid}>{!this.state.notPaid ? 'Show UnPaid' : 'Show All'}</p>\r\n            </div>\r\n\r\n            \r\n            \r\n            <div className='tbheader'>\r\n              <p className='itemRow-details'>Title of payment</p>\r\n              <p className='itemRow-details tbheader-amount'>Amount</p>\r\n              <p className='itemRow-details tbheader-date'>Due Date</p>\r\n              <p className='itemRow-details tbheader-days'>Left days to pay</p> \r\n              <p className='itemRow-details tbheader-status'>Status</p>    \r\n              <p className='itemRow-trash'></p>    \r\n            </div>\r\n        </>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <div className='listPage'>\r\n            {displayh1()}     \r\n            {list}    \r\n          </div>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nexport default PaymentList;","import React , {Component} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../css/addNew.css';\r\n\r\nclass addNew extends Component {\r\n  \r\n  state={\r\n          id: '',\r\n          title: '',\r\n          details: '',\r\n          amount: '0.00',\r\n          date: new Date().toISOString().substr(0, 10), \r\n          dayalert: '0',\r\n          paid: false,\r\n          redirect: false,\r\n          cancel: false,\r\n          errorMsg: ''\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.changeFlag();\r\n  }\r\n  renderRedirect = () => {\r\n    if (this.state.redirect || this.state.cancel) {\r\n      return <Redirect to = '/payments' />\r\n    }\r\n  }\r\n  \r\n  handleChange= (e) =>{      \r\n      this.setState( {\r\n        [e.target.id]: e.target.value,\r\n        errorMsg : ''\r\n      })    \r\n  }\r\n\r\n  handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    if (this.state.title === '' || this.state.amount === '' || parseFloat(this.state.amount) <= 0) {\r\n      this.setState({ errorMsg : 'The Title field cannot be empty and Amount must be greater than 0'})\r\n      return null\r\n    } else {\r\n      this.setState({\r\n        redirect: true,\r\n        errorMsg : ''\r\n      })\r\n      this.props.addNew(this.state);   \r\n    }\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    this.props.clearPath()\r\n    this.setState({\r\n      cancel: true\r\n    })\r\n  }\r\n  render(){ \r\n\r\n    return(\r\n      \r\n      <div className='addnewpayment'>\r\n        {this.renderRedirect()}\r\n        \r\n        <form className=\"addnewpayment-form\" onSubmit={this.handleSubmit}>\r\n          <p className=\"description\">Add New Payment</p>\r\n          <label htmlFor=\"title\">Title: </label>\r\n          <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title}/>\r\n          \r\n          <label className='textarea' htmlFor=\"details\">Details:</label> \r\n          <textarea id=\"details\" onChange={this.handleChange} value={this.state.details}/>\r\n          \r\n          <div className=\"form-row\">\r\n            <label>Amount:\r\n              <input className=\"form-amount\" type=\"number\" step='0.01' id=\"amount\" min='0' onChange={this.handleChange} value={this.state.amount}/>\r\n            </label>\r\n\r\n            <label className=\"form-label\">Date Of Payment:     \r\n              <input className=\"form-date\" type=\"date\" id='date' onChange={this.handleChange} value={this.state.date}/>\r\n            </label> \r\n          </div>\r\n  \r\n          <div className=\"line\"></div>\r\n          <div className=\"form-btns\">\r\n            <button className=\"btn-save\">Save</button>\r\n            <button className=\"btn-save\" onClick={this.handleCancel}>Cancel</button>\r\n          </div>\r\n        </form>\r\n        \r\n        <p className='errorMsg'>{this.state.errorMsg ? this.state.errorMsg : ''}</p>  \r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default addNew;","import React , {Component} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../css/addNew.css';\r\nimport { firestore } from 'firebase';\r\n\r\nclass EditPayment extends Component {\r\n  \r\n  state={\r\n          id: '',\r\n          title: '',\r\n          details: '',\r\n          amount: '0',\r\n          date: '',\r\n          dayalert: '0',\r\n          paid: false,\r\n          redirect: false,\r\n          cancel: false,\r\n          errorMsg:''\r\n  }\r\n  \r\n  clearPath = this.props.clearPath;\r\n  renderRedirect = () => {\r\n    if (this.state.redirect || this.state.cancel) {\r\n      this.clearPath();\r\n      return <Redirect to = '/payments' />\r\n    }\r\n  }\r\n  async componentDidMount(){\r\n     \r\n    const refState = this.state;\r\n    \r\n    const docRef = firestore().collection('documents').doc(this.props.id);\r\n\r\n    await docRef.get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          refState.title= doc.data().title\r\n          refState.details= doc.data().details\r\n          refState.amount= doc.data().amount\r\n          refState.date= doc.data().date\r\n          refState.dayalert= doc.data().dayalert\r\n          refState.paid= doc.data().paid       \r\n        } \r\n      })     \r\n     .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n     \r\n    const {title, details, amount, date, dayalert, paid} = refState;\r\n     \r\n    this.setState({\r\n      id: this.props.id,\r\n      title,\r\n      details,\r\n      amount,\r\n      date,\r\n      dayalert,\r\n      paid\r\n    })\r\n  }\r\n\r\n  handlePaid = (e)=>{\r\n     this.setState( {\r\n      paid: (e.currentTarget.value==='1' ? true : false)\r\n    })\r\n  }\r\n\r\n  handleChange= (e) =>{  \r\n    this.setState( {\r\n      [e.target.id]: e.target.value,\r\n      errorMsg:''\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e)=>{\r\n     e.preventDefault();\r\n     if (this.state.title === '' || this.state.amount === '' || parseFloat(this.state.amount) <= 0) {\r\n       this.setState({\r\n         errorMsg: 'The Title field cannot be empty and Amount must be greater than 0'\r\n       })\r\n       return null\r\n     } else {\r\n      this.setState({\r\n        redirect: true\r\n      })     \r\n      this.setState({refState: null})\r\n      this.props.handleSubmitEdit(this.state);   \r\n     }\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      cancel: true\r\n    })\r\n  }\r\n\r\n  isPaid = ()=> {\r\n    const ispaid = !this.state.paid ? '0' : '1'; \r\n  \r\n    return (\r\n  \r\n      <label className=\"form-isPaid\">Payment is Paid\r\n        <select name='paid' value={ispaid} onChange={this.handlePaid}>\r\n          <option value='1'>Yes</option>\r\n          <option value='0' >No</option>    \r\n        </select>\r\n      </label>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    \r\n    return (\r\n      \r\n      <div className='addnewpayment'>\r\n        {this.renderRedirect()}\r\n        \r\n        <form className=\"addnewpayment-form\" onSubmit={this.handleSubmit}>\r\n          <p className=\"description\">Edit Payment Details</p>\r\n          <label htmlFor=\"title\">Title: \r\n            <input className='input-450' type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title}/>\r\n          </label>\r\n\r\n          <label className='textarea' htmlFor=\"details\">Details: \r\n            <textarea className='input-450' id=\"details\" onChange={this.handleChange} value={this.state.details}/>\r\n          </label>\r\n\r\n          <div className=\"form-row\">\r\n            <label>Amount:\r\n              <input className=\"form-amount\" type=\"number\" step='0.01' id=\"amount\" min='0' onChange={this.handleChange} value={this.state.amount}/>\r\n            </label>\r\n\r\n            <label className=\"form-label\">Date Of Payment:      \r\n              <input className=\"form-date\" type=\"date\" id='date' onChange={this.handleChange} value={this.state.date}/>\r\n            </label>\r\n          </div>\r\n        \r\n          {this.isPaid()}\r\n        \r\n          <div className=\"line\"></div>\r\n          <div className=\"form-btns\">\r\n            <button className=\"btn-save\">Zapisz</button>\r\n            <button className=\"btn-save\" onClick={this.handleCancel}>Anuluj</button>\r\n          </div>\r\n        </form>\r\n        \r\n        <p className='errorMsg'>{this.state.errorMsg ? this.state.errorMsg : ''}</p>   \r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default EditPayment;","import React, {Component} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport PaymentList from './paymentList';\r\nimport AddNew from './addNew';\r\nimport EditPayment from './editPayment'\r\nimport SignInPage from '../SignIn'\r\n\r\n\r\nimport { firestore } from 'firebase';\r\n\r\nconst Payments = () => (\r\n  <AuthUserContext.Consumer>    \r\n      {authUser =>        \r\n        (authUser) ? \r\n          <PaymentsAuth authUser={authUser}/> : <PaymentsNonAuth />\r\n      }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nclass PaymentsAuth extends Component {\r\n\r\n  state = {\r\n    payments: [],\r\n    isFetching: false,\r\n    isFetched: false,\r\n    isEditing: false,\r\n    IdEdit:'',\r\n    isAddingNew: false,\r\n    redirectPath: ''\r\n  }\r\n      \r\n  \r\n  async componentDidMount() {\r\n   \r\n    let payments = [];\r\n    const user = this.props.authUser.email;\r\n    \r\n    this.setState({ isFetching: true }) \r\n\r\n    await firestore().collection('documents').get()  \r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          if (user === doc.data().user) {\r\n            let payment = doc.data();\r\n            payment.id = doc.id\r\n            payments.push(payment);\r\n          }\r\n        })\r\n        \r\n        return payments\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          payments : data,\r\n          isFetched: true \r\n        })\r\n      });\r\n\r\n    \r\n    this.setState({ isFetching: false })\r\n  }\r\n  \r\n  handleSubmitEdit = (payment)=>{\r\n    const {title, details, amount, date, dayalert, paid} = payment\r\n    \r\n    firestore().collection('documents').doc(this.state.IdEdit)\r\n      .update({\r\n        title, details, amount, date, dayalert, paid\r\n      })\r\n\r\n    let tempPayments = this.state.payments.filter((item)=>(item.id!==this.state.IdEdit))\r\n    \r\n    tempPayments.push(payment)\r\n    \r\n    this.setState({\r\n      payments : tempPayments,\r\n      isEditing : false\r\n    })  \r\n  }  \r\n  \r\n  \r\n  confirmPaid = (id)=> {\r\n    firestore().collection('documents').doc(id)\r\n      .update({\r\n        paid: true\r\n      })\r\n\r\n    let index =null; \r\n\r\n    this.state.payments.filter((item, i) => {\r\n      if (item.id===id) {\r\n          index = i;                   \r\n      }\r\n      return null\r\n    });\r\n\r\n    if (index > -1) {      \r\n      const payments = this.state.payments;\r\n      payments[index].paid= true;\r\n        this.setState({\r\n          payments\r\n        })\r\n      }\r\n  }\r\n\r\n\r\n  addNew = (payment)=>{       \r\n  \r\n    payment.user=this.props.authUser.email;\r\n  \r\n    firestore().collection('documents')\r\n      .add(payment)\r\n      .then(function (docRef) {\r\n        // console.log(\"Document written with ID: \", docRef.id);\r\n        payment.id = docRef.id;\r\n      })\r\n      .catch(function (error) {\r\n        // console.error(\"Error adding document: \", error);\r\n      });\r\n              \r\n      let payments=[...this.state.payments,payment];    \r\n      \r\n      this.setState({\r\n        payments,\r\n        isAddingNew: false\r\n      });     \r\n  }\r\n\r\n  changeFlag = ()=>{\r\n    this.setState({\r\n      isAddingNew:true\r\n    })\r\n  }\r\n\r\n  handleEdit = (id)=>{\r\n    this.setState({IdEdit:id})\r\n    this.setState({isEditing: true})\r\n    this.setState({redirectPath: 'payments/edit'})\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    \r\n    let newPayments = this.state.payments.filter(item => (item.id !== id));\r\n    \r\n    this.setState({payments : newPayments})\r\n    \r\n    firestore().collection(\"documents\").doc(id)\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"Document successfully deleted!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  }\r\n  \r\n  renderRedirect = ()=>{\r\n    const path = this.state.redirectPath\r\n    if (path) return <Redirect to={path}/>\r\n  }\r\n\r\n  clearPath = ()=>{\r\n    this.setState({\r\n      redirectPath : '',\r\n      isEditing: false,\r\n      isAddingNew:false\r\n    })\r\n  }\r\n\r\n  showMessage = ()=> {\r\n    return (this.state.isFetching ? \r\n              <div className=\"center\" ><h1>Fetchng Data...</h1></div>\r\n              : '')\r\n  }\r\n\r\n  showList = ()=>{\r\n   \r\n    return (!this.state.isEditing && !this.state.isAddingNew? \r\n              <PaymentList\r\n                  payments={this.state.payments}\r\n                  confirmPaid={this.confirmPaid}                 \r\n                  handleEdit={this.handleEdit}\r\n                  handleDelete={this.handleDelete} /> \r\n              : '')\r\n  }\r\n\r\n  render(){\r\n    \r\n    let stylesAddBtn = this.state.isAddingNew || this.state.isEditing ? {\r\n      display: 'none'\r\n    }: {\r\n      display: 'flex'\r\n    }\r\n  \r\n    return(\r\n  \r\n      <div className=\"wrapper columns\">\r\n            \r\n        <Router>     \r\n          {this.renderRedirect()}    \r\n          <div className=\"topInfo\">\r\n            <h1 className=\"topInfo-h1\">Your Payments List</h1>\r\n            <div className=\"topInfo-add\">\r\n              <Link to='/payments/add' className=\"topInfo-add-link\" style={stylesAddBtn}>Add New</Link>    \r\n            </div>\r\n          </div>\r\n            \r\n          <Switch>\r\n            \r\n            <Route path=\"/payments/add\">             \r\n              <AddNew \r\n                addNew={this.addNew}\r\n                changeFlag={this.changeFlag}\r\n                clearPath={this.clearPath} \r\n              />\r\n            </Route>    \r\n            \r\n            <Route path=\"/payments/edit\">             \r\n              <EditPayment \r\n                id={this.state.IdEdit}\r\n                clearPath={this.clearPath} \r\n                handleSubmitEdit={this.handleSubmitEdit} \r\n                />   \r\n            </Route>\r\n              \r\n          </Switch> \r\n                \r\n        </Router>\r\n\r\n        {this.showMessage()}\r\n        {this.showList()}\r\n        \r\n      </div>\r\n    \r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst PaymentsNonAuth = () => (\r\n  <div>\r\n    <SignInPage/>\r\n  </div>\r\n);\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\r\n    \r\n    return (\r\n      <form className=\"signin\" onSubmit={this.onSubmit}>\r\n        \r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          className=\"confirmPass\"\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <div className=\"line\"></div>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div className=\"wrapper columns\">\r\n        \r\n        <div className=\"topInfo\">\r\n          <h1 className=\"topInfo-h1\">Account Details</h1>\r\n        </div>  \r\n        \r\n        <h3>User name: {authUser.email}</h3>\r\n        \r\n        {/* <PasswordForgetForm /> */}\r\n        <PasswordChangeForm />\r\n\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);","import React, {Component} from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n\r\n    });\r\n  }\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>        \r\n        {loading && <div>Loading ...</div>}\r\n        <UserList users={users} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport PaymentsPage from '../Payments';\r\nimport EditPaymentPage from '../Payments/editPayment';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\n\r\nconst App = () => (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        \r\n        <Navigation />\r\n          \r\n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n        <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n        <Route path={ROUTES.HOME} component={HomePage} />\r\n        <Route path={ROUTES.PAYMENTS} component={PaymentsPage} />\r\n        <Route path={ROUTES.EDITPAYMENT} component={EditPaymentPage} />\r\n        <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n        <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n           \r\n      </Router>\r\n );\r\n\r\n export default withAuthentication(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import App from './App';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Firebase, {\r\n  FirebaseContext\r\n} from './components/Firebase'\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}