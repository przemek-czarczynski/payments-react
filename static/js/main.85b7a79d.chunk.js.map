{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/functions/currentDate.js","components/functions/left.js","components/Payments/paymentItem.js","components/Payments/paymentList.js","components/Payments/addNew.js","components/Payments/editPayment.js","components/Payments/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APIID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","className","type","onClick","handleClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","to","SignOut","NavigationNonAuth","Navigation","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","currentDate","pdate","Date","year","getFullYear","month","getMonth","day","getDate","left","date","longCdate","paymentItem","item","id","title","amount","paid","confirmPaid","handleEdit","didpaid","styles","backgroundColor","color","style","parseFloat","toFixed","PaymentList","notPaid","sortlist","payments","sort","a","b","filter","handleNotPaid","list","map","key","tabheader","tb","length","displayh1","addNew","details","dayalert","redirect","cancel","renderRedirect","handleChange","e","handleSubmit","handleCancel","htmlFor","step","min","EditPayment","clearPath","refState","console","log","handleSubmitEdit","docRef","firestore","collection","doc","get","exists","data","PaymentsAuth","isFetching","isFetched","isEditing","IdEdit","redirectPath","payment","update","tempPayments","index","i","add","path","showMessage","showList","querySnapshot","forEach","PaymentsNonAuth","Payments","PasswordChangeForm","PasswordChange","AdminPage","loading","off","on","snapshot","usersObject","val","usersList","Object","keys","UserList","exact","component","LandingPage","HomePage","PaymentsPage","EditPaymentPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85b7a79d.chunk.js","sourcesContent":["import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","  // Your web app's Firebase configuration\r\nimport app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n  const config = {\r\n      apiKey: process.env.REACT_APP_API_KEY,\r\n      authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n      databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n      projectId: process.env.REACT_APP_PROJECT_ID,\r\n      storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n      messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n      appId: process.env.REACT_APP_APIID\r\n  };\r\n\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n     this.auth = app.auth();\r\n     this.db = app.database();\r\n  }\r\n   // *** Auth API ***\r\n   doCreateUserWithEmailAndPassword = (email, password) =>\r\n     this.auth.createUserWithEmailAndPassword(email, password);\r\n   \r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n \r\n  user = uid => this.db.ref(`users/${uid}`);\r\n  users = () => this.db.ref('users');\r\n}\r\nexport default Firebase;","import FirebaseContext, {\r\n  withFirebase\r\n} from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport {\r\n  FirebaseContext,\r\n  withFirebase\r\n};","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nconst handleClick =( firebase )=>{\r\nfirebase.doSignOut();\r\n\r\n}\r\nconst SignOutButton = ({firebase}) => (\r\n  <button className='x' type=\"button\" onClick={()=>handleClick(firebase)}>\r\n    Sign Out\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\nconst AuthUserContext = React.createContext(null);\r\nexport default AuthUserContext;","import React from 'react';\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n   render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport AuthUserContext from './context';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\nexport default withAuthorization;","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const PAYMENTS = '/payments';\r\nexport const PAYMENTSLIST = '/payments/list';\r\nexport const EDITPAYMENT = '/payments/edit';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport SignOutButton from '../SignOut';\r\nimport { AuthUserContext } from '../Session';\r\nconst Navigation = () => (\r\n  <div><AuthUserContext.Consumer>\r\n      \r\n      {authUser => \r\n        \r\n        (authUser) ? <NavigationAuth authUser={authUser}/> : <NavigationNonAuth />\r\n      \r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\nconst NavigationAuth = (props) =>{ \r\n \r\nreturn (\r\n  \r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.PAYMENTS}>Payments</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n)};\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\nconst Landing = ()=>{\r\n\r\n  return (\r\n    <div>Landing Page</div>\r\n  )\r\n}\r\n\r\nexport default Landing","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport {\r\n  withFirebase\r\n} from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n     <SignUpForm/>\r\n    \r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n\r\n\r\n// class SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE\r\n    };\r\n  }\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          });\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase)(SignUpFormBase);\r\n\r\n// const SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === '' || email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };","import React from 'react';\r\nimport { withAuthorization } from '../Session';\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);","const currentDate = () => {\r\n    const pdate = new Date();\r\n    const year = pdate.getFullYear();\r\n    const month = ((pdate.getMonth() + 1) > 9) ? (pdate.getMonth() + 1) : `0${(pdate.getMonth()+1)}`;\r\n    const day = pdate.getDate();\r\n\r\n    const date = `${year}-${month}-${day}`;\r\n    return date\r\n  };\r\n\r\nexport default currentDate","\r\nimport currentDate from '../functions/currentDate'\r\n\r\nconst left = (date) => {\r\n  const longCdate = new Date(currentDate(new Date()))\r\n  const longPdate = new Date(date)\r\n  return ((longPdate - longCdate) / (24 * 60 * 60 * 1000));\r\n\r\n}\r\n\r\nexport default left","import React from 'react';\r\nimport '../../css/paymentItem.css'\r\n\r\nimport left from '../functions/left'\r\n\r\nconst paymentItem = (props)=>{\r\n  const {id, title, amount, date, paid } = props.item;\r\n  const confirmPaid = props.confirmPaid;\r\n  const handleEdit = props.handleEdit;\r\n\r\n  const handlePaid = ()=>{\r\n    confirmPaid(id)\r\n  }\r\n\r\n  const handleIdEdit = () => {\r\n    handleEdit(id)\r\n  }\r\n  const didpaid= paid ? \r\n    <p className=' btn-confirmed center'>Paid</p>\r\n    :<p className=' btn-not-confirmed center' onClick={handlePaid}>Mark as Paid</p>\r\n  \r\n  let styles = {}\r\n  \r\n  if (left(date) < 0 )\r\n  {\r\n    styles= {\r\n    backgroundColor: 'rgb(200, 21, 21)',\r\n    color : 'white'\r\n    }\r\n  } else if (left(date)===0) {\r\n    styles = {\r\n      backgroundColor: 'rgb(240, 191, 30)',\r\n      color: 'white'\r\n    }\r\n  }  \r\n\r\n  return (\r\n    \r\n    <div className='itemRow' style={styles} onClick={handleIdEdit}>\r\n\r\n      <p className='itemRow-details '>{title}</p>\r\n      <p className='itemRow-details center'>{parseFloat(amount).toFixed(2)}</p>\r\n      <p className='itemRow-details center'>{date}</p>\r\n      \r\n      {didpaid}\r\n\r\n      <p className='itemRow-details center' >{left(date)}</p>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default paymentItem;","import React, {Component} from 'react';\r\nimport PaymentItem from './paymentItem';\r\nimport '../../css/paymentList.css';\r\nimport '../../css/paymentItem.css';\r\nimport left from '../functions/left'\r\n\r\nclass PaymentList extends Component {\r\n  state={\r\n    notPaid : false\r\n  }\r\n  \r\n  render() {\r\n    let sortlist=[]\r\n    const props = this.props\r\n    const confirmPaid = props.confirmPaid;\r\n    const handleEdit = props.handleEdit;\r\n    \r\n    const compareLeftdays = (a,b)=> {\r\n      return left(a.date) - left(b.date)\r\n    }\r\n  \r\n    sortlist = props.payments.sort(compareLeftdays);\r\n    if (this.state.notPaid) {\r\n      let notpaidlist = [...sortlist]\r\n      sortlist= notpaidlist.filter(item => { return item.paid===false})\r\n    }\r\n    \r\n\r\n    const handleNotPaid = () => {\r\n        this.setState({\r\n          notPaid: !this.state.notPaid\r\n        })\r\n        // sortlist = sortlist.filter( item => {\r\n        //   if (item.paid === false) { return item }\r\n        // })\r\n\r\n    }\r\n\r\n  let list = sortlist.map(item => (\r\n   \r\n    <tr key={item.id}>\r\n      <PaymentItem \r\n        item={item}\r\n        confirmPaid={confirmPaid} \r\n        handleEdit={handleEdit} \r\n        />\r\n    </tr>  \r\n    \r\n    ));\r\n\r\n  const displayh1 = () => {\r\n      const tb = tabheader();\r\n      return (props.payments.length > 0 ? tb : <h1> Empty List </h1>)\r\n\r\n      }\r\n  \r\n  const tabheader= ()=>{\r\n    return (\r\n        <div>\r\n          <div className='columns'>\r\n          <h1>{this.state.notPaid ? 'Not paid financial commitments' : 'All financial commitments'}</h1>\r\n            <p className='btn-save' onClick={handleNotPaid}>{!this.state.notPaid ? 'Tylko nie zaplacone' : 'Wszystkie'}</p>\r\n          </div>\r\n          <div className='tbheader'>\r\n            <p className='itemRow-details center'>Title of payment</p>\r\n            <p className='itemRow-details center '>Amount</p>\r\n            <p className='itemRow-details center'>Date of payment</p>\r\n            <p className='itemRow-details center'>Status</p>\r\n            <p className='itemRow-details center'>Left days to pay</p>     \r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className='listPage'>\r\n          {displayh1()}     \r\n          {list}    \r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n  \r\n}\r\n\r\nexport default PaymentList;","import React , {Component} from 'react'\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport '../../css/addNew.css';\r\n\r\nclass addNew extends Component {\r\n  \r\nstate={\r\n        id: '',\r\n        title: '',\r\n        details: '',\r\n        amount: '0',\r\n        date: '',\r\n        dayalert: '0',\r\n        paid: false,\r\n        redirect: false,\r\n        cancel: false\r\n  }\r\n  \r\n  renderRedirect = () => {\r\n    if (this.state.redirect || this.state.cancel) {\r\n      return <Redirect to = '/payments' />\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    \r\n    const getDate = ()=> {\r\n      const pdate =  new Date();\r\n      const year = pdate.getFullYear() ;\r\n      const month = ( (pdate.getMonth()+1) > 9) ? (pdate.getMonth()+1) : `0${(pdate.getMonth()+1)}` ;\r\n      const day = pdate.getDate();\r\n\r\n      const date = `${year}-${month}-${day}`;\r\n      this.setState({\r\n        date\r\n      });\r\n    };\r\n\r\n    getDate();\r\n  }\r\n\r\n  \r\n  handleChange= (e) =>{  \r\n    this.setState( {\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e)=>{\r\n      this.setState({\r\n        redirect: true\r\n      })\r\n      e.preventDefault();\r\n      this.props.addNew(this.state);   \r\n  }\r\n\r\n    handleCancel = (e) => {\r\n      this.setState({\r\n        cancel: true\r\n      })\r\n    }\r\n  render(){\r\n    return (\r\n      \r\n      <div className='addnewpayment'>\r\n        {  this.renderRedirect()\r\n        }\r\n        <h1>Dodaj nowe zobowiązanie</h1>\r\n        <form className=\"addnewpayment-form\" onSubmit={this.handleSubmit}>\r\n        \r\n        <label htmlFor=\"title\">Płatność za: \r\n          <input className='input-450' type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title}/>\r\n        </label>\r\n\r\n        <label className='textarea' htmlFor=\"details\">Szczegółowy opis płatności: \r\n          <textarea className='input-450' id=\"details\" onChange={this.handleChange} value={this.state.details}/>\r\n        </label>\r\n\r\n        <label htmlFor=\"amount\">Kwota zobowiązania:\r\n          <input className='text-right input-250' type=\"number\" step='0.01' id=\"amount\" min='0' onChange={this.handleChange} value={this.state.amount}/>\r\n        </label>\r\n\r\n        <label htmlFor=\"amount\">Data płatności:      \r\n          <input className='text-right input-250' type=\"date\" id='date' onChange={this.handleChange} value={this.state.date}/>\r\n        </label>\r\n\r\n        <label htmlFor=\"\">Liczba dni przed terminem\r\n          <input className='text-right input-250' type=\"number\" id=\"dayalert\" min='0' onChange={this.handleChange} placeholder=\"\" value={this.state.dayalert}/>\r\n        </label>\r\n\r\n        <div className=\"line\"></div>\r\n        <button className=\"btn-save\">Zapisz</button>\r\n        <p className=\"btn-save\" onClick={this.handleCancel}>Anuluj</p>\r\n      \r\n      </form>\r\n        \r\n    </div>\r\n  );\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default addNew;","import React , {Component} from 'react'\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport '../../css/addNew.css';\r\nimport { firestore } from 'firebase';\r\n\r\nclass EditPayment extends Component {\r\n  \r\nstate={\r\n        id: '',\r\n        title: '',\r\n        details: '',\r\n        amount: '0',\r\n        date: '',\r\n        dayalert: '0',\r\n        paid: false,\r\n        redirect: false,\r\n        cancel: false\r\n  }\r\n  \r\n  clearPath = this.props.clearPath;\r\n  renderRedirect = () => {\r\n    if (this.state.redirect || this.state.cancel) {\r\n      this.clearPath();\r\n      return <Redirect to = '/payments' />\r\n    }\r\n  }\r\n  async componentDidMount(){\r\n    //  firestore().collection('documents').get()\r\n     \r\n    const refState = this.state;\r\n    \r\n     const docRef = firestore().collection('documents').doc(this.props.id);\r\n\r\n     await docRef.get().then(function (doc) {\r\n       if (doc.exists) {\r\n          refState.title= doc.data().title\r\n          refState.details= doc.data().details\r\n          refState.amount= doc.data().amount\r\n          refState.date= doc.data().date\r\n          refState.dayalert= doc.data().dayalert\r\n          refState.paid= doc.data().paid\r\n          // return this.refState       \r\n       } \r\n     })     \r\n     .catch(function (error) {\r\n       console.log(\"Error getting document:\", error);\r\n     });\r\n     \r\n     const {title, details, amount} = refState;\r\n     this.setState({\r\n       title,\r\n       details,\r\n       amount,\r\n     })\r\n    \r\n  }\r\n\r\n  \r\n  handleChange= (e) =>{  \r\n    this.setState( {\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e)=>{\r\n      this.setState({\r\n        redirect: true\r\n      })\r\n      e.preventDefault();\r\n      this.setState({refState: null})\r\n      console.log(this.state)\r\n      this.props.handleSubmitEdit(this.state);   \r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      cancel: true\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      \r\n      <div className='addnewpayment'>\r\n        {  this.renderRedirect()\r\n        }\r\n        <h1>Edit finacial commitment</h1>\r\n        <form className=\"addnewpayment-form\" onSubmit={this.handleSubmit}>\r\n        \r\n        <label htmlFor=\"title\">Płatność za: \r\n          <input className='input-450' type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title}/>\r\n        </label>\r\n\r\n        <label className='textarea' htmlFor=\"details\">Szczegółowy opis płatności: \r\n          <textarea className='input-450' id=\"details\" onChange={this.handleChange} value={this.state.details}/>\r\n        </label>\r\n\r\n        <label htmlFor=\"amount\">Kwota zobowiązania:\r\n          <input className='text-right input-250' type=\"number\" step='0.01' id=\"amount\" min='0' onChange={this.handleChange} value={this.state.amount}/>\r\n        </label>\r\n\r\n        <label htmlFor=\"amount\">Data płatności:      \r\n          <input className='text-right input-250' type=\"date\" id='date' onChange={this.handleChange} value={this.state.date}/>\r\n        </label>\r\n\r\n        <label htmlFor=\"\">Liczba dni przed terminem\r\n          <input className='text-right input-250' type=\"number\" id=\"dayalert\" min='0' onChange={this.handleChange} placeholder=\"\" value={this.state.dayalert}/>\r\n        </label>\r\n\r\n        <div className=\"line\"></div>\r\n        <button className=\"btn-save\">Zapisz</button>\r\n        <p className=\"btn-save\" onClick={this.handleCancel}>Anuluj</p>\r\n      \r\n      </form>\r\n        \r\n    </div>\r\n  );\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default EditPayment;","import React, {Component} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport PaymentList from './paymentList';\r\nimport AddNew from './addNew';\r\nimport EditPayment from './editPayment'\r\n\r\n\r\nimport { firestore } from 'firebase';\r\n\r\nconst Payments = () => (\r\n  <div><AuthUserContext.Consumer>\r\n      \r\n      {authUser => \r\n        \r\n        (authUser) ? <PaymentsAuth authUser={authUser}/> : <PaymentsNonAuth />\r\n      \r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\nclass PaymentsAuth extends Component {\r\n\r\n  state = {\r\n    payments: [],\r\n    isFetching: false,\r\n    isFetched: false,\r\n    isEditing: false,\r\n    IdEdit:'',\r\n    redirectPath: ''\r\n  }\r\n      \r\n  \r\n  async componentDidMount() {\r\n   \r\n    let payments = [];\r\n    const user = this.props.authUser.email;\r\n    \r\n    this.setState({ isFetching: true }) \r\n\r\n    await firestore().collection('documents').get()  \r\n      .then(function (querySnapshot) {\r\n \r\n        querySnapshot.forEach(function (doc) {\r\n          // doc.data() is never undefined for query doc snapshots\r\n\r\n          if (user === doc.data().user) {\r\n            let payment = doc.data();\r\n            payment.id = doc.id\r\n            payments.push(payment);\r\n          }\r\n        \r\n        \r\n        })\r\n        \r\n      \r\n        return payments\r\n      })\r\n      .then(data => {\r\n         \r\n          this.setState({\r\n        payments : data,\r\n        isFetched: true })\r\n      });\r\n\r\n    \r\n    this.setState({ isFetching: false })\r\n  }\r\n  \r\n  handleSubmitEdit = (payment)=>{\r\n\r\n    const {title, details, amount} = payment\r\n    firestore().collection('documents').doc(this.state.IdEdit).update({\r\n      title, details, amount\r\n    })\r\n\r\n    let tempPayments = this.state.payments.filter((item)=>(item.id!==this.state.IdEdit))\r\n    tempPayments.push(payment)\r\n    this.setState({\r\n      payments : tempPayments,\r\n      isEditing : false\r\n    })\r\n    \r\n  }  \r\n  \r\n  \r\n  confirmPaid = (id)=> {\r\n    firestore().collection('documents').doc(id).update({\r\n      paid: true\r\n    })\r\n\r\n    let index =null; \r\n\r\n    this.state.payments.filter((item, i) => {\r\n      if (item.id===id) {\r\n          index = i;                   \r\n      }\r\n      return null\r\n    });\r\n\r\n    if (index > -1) {\r\n      \r\n      const payments = this.state.payments;\r\n      payments[index].paid= true;\r\n        this.setState({\r\n          payments\r\n        })\r\n      }\r\n  }\r\n\r\n\r\n  addNew = (payment)=>{\r\n         \r\n      payment.user=this.props.authUser.email;\r\n\r\n      firestore().collection('documents').add(payment)\r\n      .then(function (docRef) {\r\n          // console.log(\"Document written with ID: \", docRef.id);\r\n          payment.id = docRef.id;\r\n        })\r\n        .catch(function (error) {\r\n          // console.error(\"Error adding document: \", error);\r\n        });\r\n              \r\n\r\n      let payments=[...this.state.payments,payment];    \r\n      \r\n      this.setState({\r\n        payments\r\n      });     \r\n  }\r\n\r\n  handleEdit = (id)=>{\r\n    this.setState({IdEdit:id})\r\n    this.setState({isEditing: true})\r\n    this.setState({redirectPath: 'payments/edit'})\r\n  }\r\n\r\n  renderRedirect = ()=>{\r\n    const path = this.state.redirectPath\r\n    if (path) return <Redirect to={path}/>\r\n  }\r\n\r\n  clearPath = ()=>{\r\n    this.setState({\r\n      redirectPath : '',\r\n      isEditing: false\r\n    })\r\n  }\r\n\r\n  showMessage = ()=> {\r\n    return (this.state.isFetching ? <h1>Fetchng Data...</h1> : '')\r\n  }\r\n  showList = ()=>{\r\n   \r\n    return (!this.state.isEditing ? <PaymentList\r\n                  payments={this.state.payments}\r\n                  confirmPaid={this.confirmPaid}                 \r\n                  handleEdit={this.handleEdit} /> : '')\r\n  }\r\n  render(){\r\n    // if (this.isFetched) {this.getData()}\r\n    \r\n   \r\n  \r\n    return(\r\n      <div>\r\n          <Router>     \r\n\r\n            {this.renderRedirect()}\r\n            <Link to='/payments/add'>- Add New -</Link>    \r\n            \r\n            \r\n            <Switch>\r\n              \r\n              \r\n\r\n              <Route path=\"/payments/add\">             \r\n                <AddNew addNew={this.addNew}/>\r\n              </Route>    \r\n\r\n             \r\n              \r\n              <Route path=\"/payments/edit\">             \r\n                <EditPayment \r\n                  id={this.state.IdEdit}\r\n                  clearPath={this.clearPath} \r\n                  handleSubmitEdit={this.handleSubmitEdit} \r\n                  />\r\n              </Route>  \r\n            </Switch>\r\n      \r\n          </Router>\r\n          {this.showMessage()}\r\n         {this.showList()}\r\n        {/* {this.state.isFetching ? 'Fetching' :  <PaymentList\r\n                  payments={this.state.payments}\r\n                  confirmPaid={this.confirmPaid}                 \r\n                  handleEdit={this.handleEdit} /> } */}\r\n\r\n          </div>\r\n    \r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst PaymentsNonAuth = () => (\r\n  <div>Access danied. You are not log in. Please Login to your account.</div>\r\n);\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(AccountPage);","import React, {Component} from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n\r\n    });\r\n  }\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>        \r\n        {loading && <div>Loading ...</div>}\r\n        <UserList users={users} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport PaymentsPage from '../Payments';\r\nimport EditPaymentPage from '../Payments/editPayment';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n// import {\r\n//   AuthUserContext\r\n// } from '../Session';\r\n// import withAuthentication from './withAuthentication';\r\nimport { withAuthentication } from '../Session';\r\n\r\n\r\nconst App = () => (\r\n      <Router>\r\n        <div>\r\n          <Navigation />\r\n\r\n      \r\n            <hr />\r\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n            <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n            <Route path={ROUTES.HOME} component={HomePage} />\r\n            <Route path={ROUTES.PAYMENTS} component={PaymentsPage} />\r\n            <Route path={ROUTES.EDITPAYMENT} component={EditPaymentPage} />\r\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n            <hr/>\r\n \r\n        </div>\r\n      </Router>\r\n );\r\n\r\n export default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import App from './App';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Firebase, {\n  FirebaseContext\n} from './components/Firebase'\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}